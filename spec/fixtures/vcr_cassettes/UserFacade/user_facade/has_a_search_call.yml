---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=d2198b40a5c82882520e0f6673eac605&query=The%20Godfather
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.7.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Fri, 24 Mar 2023 16:12:02 GMT
      Server:
      - openresty
      Cache-Control:
      - public, max-age=28800
      X-Memc:
      - HIT
      X-Memc-Key:
      - 56a64f47f8106d7619e8171cd39534d0
      X-Memc-Age:
      - '4552'
      X-Memc-Expires:
      - '17048'
      Etag:
      - W/"89024fc3e577f905f282f4b5c8ce7b62"
      Vary:
      - Accept-Encoding
      - Origin
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 96725c0e4ced177a38df871e7cc48a4a.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN52-P2
      Alt-Svc:
      - h3=":443"; ma=86400
      X-Amz-Cf-Id:
      - Civ2aezqwsvZACcnhFqVLBfxZpZAF_FGt0wH0qK0DvbnuT7xcCFtsg==
      Age:
      - '18679'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 24 Mar 2023 21:23:21 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=d2198b40a5c82882520e0f6673eac605&query=The%20Godfather
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.7.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Fri, 24 Mar 2023 16:12:02 GMT
      Server:
      - openresty
      Cache-Control:
      - public, max-age=28800
      X-Memc:
      - HIT
      X-Memc-Key:
      - 56a64f47f8106d7619e8171cd39534d0
      X-Memc-Age:
      - '4552'
      X-Memc-Expires:
      - '17048'
      Etag:
      - W/"89024fc3e577f905f282f4b5c8ce7b62"
      Vary:
      - Accept-Encoding
      - Origin
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 16d72e0791ff01fc4470d27fc024527a.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN52-P2
      Alt-Svc:
      - h3=":443"; ma=86400
      X-Amz-Cf-Id:
      - vKT0Ues0Mr9UojNf_lemo-DipsqtUNkn9KBUpTQJd9P10qfvRobUuA==
      Age:
      - '18679'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 24 Mar 2023 21:23:21 GMT
recorded_with: VCR 6.1.0
